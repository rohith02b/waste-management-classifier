# This workflow will deploy an application to a Azure Kubernetes Service (AKS) cluster
#
# This workflow assumes you have already created the target AKS cluster and have created an Azure Container Registry (ACR)
# The ACR should be attached to the AKS cluster
# For instructions see:
#   - https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal
#   - https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-portal
#   - https://learn.microsoft.com/en-us/azure/aks/cluster-container-registry-integration?tabs=azure-cli#configure-acr-integration-for-existing-aks-clusters
#   - https://github.com/Azure/aks-create-action
#
# To configure this workflow:
#
# 1. Set the following secrets in your repository (instructions for getting these can be found at https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Clinux):
#    - AZURE_CLIENT_ID
#    - AZURE_TENANT_ID
#    - AZURE_SUBSCRIPTION_ID
#
# 2. Set the following environment variables (or replace the values below):
#    - AZURE_CONTAINER_REGISTRY (name of your container registry / ACR)
#    - CONTAINER_NAME (name of the container image you would like to push up to your ACR)
#    - CONTAINER_TAG (docker image tag)
#    - PROJECT_PATH (base path of the project in the repo)
#    - RESOURCE_GROUP (where your cluster is deployed)
#    - CLUSTER_NAME (name of your AKS cluster)
#    - DEPLOYMENT_MANIFEST_PATH (path to the manifest yaml for your deployment)
#    - CLUSTER_NAMESPACE (name of the namespace in the AKS cluster)
#    - ENVIRONMENT (name of the GitHub action workflow environment)
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
# For more options with the actions used below please refer to https://github.com/Azure/login

name: 'Reusable Workflow Deploy to AKS'

on:
  workflow_call:
    inputs:
      AZURE_CONTAINER_REGISTRY:
        required: true
        type: string
        default: ''
      CONTAINER_NAME:
        required: true
        type: string
        default: ''
      CONTAINER_TAG:
        required: true
        type: string
        default: ''
      RESOURCE_GROUP:
        required: true
        type: string
        default: ''
      PROJECT_PATH:
        required: true
        type: string
        default: ''
      CLUSTER_NAME:
        required: true
        type: string
        default: ''
      DEPLOYMENT_MANIFEST_PATH:
        required: true
        type: string
        default: ''
      CLUSTER_NAMESPACE:
        required: true
        type: string
        default: ''
      ENVIRONMENT:
        required: true
        type: string
        default: 'dev'

jobs:
  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.RESOURCE_GROUP }}
          cluster-name: ${{ inputs.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: '${{ inputs.PROJECT_PATH }}/${{ inputs.DEPLOYMENT_MANIFEST_PATH }}'
          namespace: ${{ inputs.CLUSTER_NAMESPACE }}
          images: |
            ${{ inputs.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ inputs.CONTAINER_NAME }}:${{ inputs.CONTAINER_TAG }}
